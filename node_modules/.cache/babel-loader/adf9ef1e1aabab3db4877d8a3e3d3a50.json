{"ast":null,"code":"var _jsxFileName = \"/home/rdfi/Projects/yilu/flight-list/src/flights/FlightList.js\";\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { getFlights, sortDirections } from './flighs.service';\nimport { Table } from 'semantic-ui-react';\nimport { getDateFromUnixTime } from '../unix-time.service';\nimport moment from 'moment';\nimport './FlightList.scss';\nexport function FlightList() {\n  const [flights, setFlights] = useState(\n  /**@type {import('./flighs.service').Flight[]} */\n  []);\n  const [sortOptions, setSortOptions] = useState(\n  /**@type {{columnName?: string, direction?: string}} */\n  {});\n  useEffect(() => {\n    getFlights(sortOptions.columnName, sortOptions.direction).then(setFlights, error => {\n      alert(error);\n    });\n  }, [sortOptions]);\n\n  if (flights.length === 0) {\n    return React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, \"No flights\");\n  }\n\n  return React.createElement(\"div\", {\n    className: \"flight-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(Table, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(Table.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(Table.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(Table.HeaderCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Flight No\"), React.createElement(Table.HeaderCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(SortableColumn, {\n    columnName: \"origin\",\n    sortOptions: sortOptions,\n    onSortingChanged: setSortOptions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Origin\")), React.createElement(Table.HeaderCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(SortableColumn, {\n    columnName: \"destination\",\n    sortOptions: sortOptions,\n    onSortingChanged: setSortOptions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"Destination\")), React.createElement(Table.HeaderCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(SortableColumn, {\n    columnName: \"boarding-time\",\n    sortOptions: sortOptions,\n    onSortingChanged: setSortOptions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"Boarding Time\")), React.createElement(Table.HeaderCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(SortableColumn, {\n    columnName: \"departure-time\",\n    sortOptions: sortOptions,\n    onSortingChanged: setSortOptions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Departure Time\")), React.createElement(Table.HeaderCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Gate\"), React.createElement(Table.HeaderCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Seat\"))), React.createElement(Table.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, flights.map(flight => React.createElement(FlightRow, {\n    flight: flight,\n    key: flight.segment_id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  })))));\n}\n/** @param {{flight: import('./flighs.service').Flight}} props*/\n\nfunction FlightRow({\n  flight\n}) {\n  var _flight$detail, _flight$detail2, _flight$detail3;\n\n  const departureTime = (flight === null || flight === void 0 ? void 0 : flight.departure) ? moment(getDateFromUnixTime(flight.departure)).format('DD/MM/YYYY HH:mm') : 'N/A';\n  const boardingTime = (flight === null || flight === void 0 ? void 0 : (_flight$detail = flight.detail) === null || _flight$detail === void 0 ? void 0 : _flight$detail.boarding) ? moment(getDateFromUnixTime(flight.detail.boarding)).format('DD/MM/YYYY HH:mm') : 'N/A';\n  return React.createElement(Table.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(Table.Cell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, flight.detail.flight_number), React.createElement(Table.Cell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, flight.origin.value), React.createElement(Table.Cell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, flight.destination.value), React.createElement(Table.Cell, {\n    \"data-testid\": \"boarding-time\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, boardingTime), React.createElement(Table.Cell, {\n    \"data-testid\": \"departure-time\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, departureTime), React.createElement(Table.Cell, {\n    \"data-testid\": \"gate-info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, (flight === null || flight === void 0 ? void 0 : (_flight$detail2 = flight.detail) === null || _flight$detail2 === void 0 ? void 0 : _flight$detail2.gate) || 'N/A'), React.createElement(Table.Cell, {\n    \"data-testid\": \"seat-info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, (flight === null || flight === void 0 ? void 0 : (_flight$detail3 = flight.detail) === null || _flight$detail3 === void 0 ? void 0 : _flight$detail3.seat) || 'N/A'));\n}\n\nFlightRow.propTypes = {\n  flight: PropTypes.object.isRequired\n};\n/**\n * @param {object} props\n * @param {string} props.columnName\n * @param {{columnName: string, direction: string}} [props.sortOptions]\n * @param {object} props.children\n * @param {(sortOptions: {columnName: string, direction:string}) => void} props.onSortingChanged\n */\n\nfunction SortableColumn({\n  columnName,\n  sortOptions,\n  children,\n  onSortingChanged\n}) {\n  const sortDirection = (sortOptions === null || sortOptions === void 0 ? void 0 : sortOptions.columnName) === columnName ? sortOptions === null || sortOptions === void 0 ? void 0 : sortOptions.direction : sortDirections.none;\n\n  function handleSortingChanged() {\n    switch (sortDirection) {\n      case sortDirections.none:\n        onSortingChanged({\n          columnName,\n          direction: sortDirections.descending\n        });\n        break;\n\n      case sortDirections.descending:\n        onSortingChanged({\n          columnName,\n          direction: sortDirections.ascending\n        });\n        break;\n\n      case sortDirections.ascending:\n        onSortingChanged({\n          columnName,\n          direction: sortDirections.none\n        });\n        break;\n\n      default:\n        throw new Error('Invalid sort direction');\n    }\n  }\n\n  return React.createElement(\"div\", {\n    className: `sortable ${sortDirection || ''}`,\n    onClick: handleSortingChanged,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, children);\n}\n\nSortableColumn.propTypes = {\n  columnName: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n  onSortingChanged: PropTypes.func.isRequired\n};","map":{"version":3,"sources":["/home/rdfi/Projects/yilu/flight-list/src/flights/FlightList.js"],"names":["React","useState","useEffect","PropTypes","getFlights","sortDirections","Table","getDateFromUnixTime","moment","FlightList","flights","setFlights","sortOptions","setSortOptions","columnName","direction","then","error","alert","length","map","flight","segment_id","FlightRow","departureTime","departure","format","boardingTime","detail","boarding","flight_number","origin","value","destination","gate","seat","propTypes","object","isRequired","SortableColumn","children","onSortingChanged","sortDirection","none","handleSortingChanged","descending","ascending","Error","string","node","func"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { getFlights, sortDirections } from './flighs.service'\nimport { Table } from 'semantic-ui-react';\nimport { getDateFromUnixTime } from '../unix-time.service';\nimport moment from 'moment';\nimport './FlightList.scss'\n\nexport function FlightList() {\n    const [flights, setFlights] = useState(/**@type {import('./flighs.service').Flight[]} */([]));\n    const [sortOptions, setSortOptions] = useState(/**@type {{columnName?: string, direction?: string}} */({}))\n\n    useEffect(() => {\n        getFlights(sortOptions.columnName, sortOptions.direction).then(setFlights, error => {\n            alert(error);\n        });\n    }, [sortOptions])\n\n    if (flights.length === 0){\n        return <h4>No flights</h4>\n    }\n\n    return (<div className=\"flight-list\">\n        <Table>\n            <Table.Header>\n                <Table.Row>\n                    <Table.HeaderCell>Flight No</Table.HeaderCell>\n                    <Table.HeaderCell><SortableColumn columnName=\"origin\" sortOptions={sortOptions} onSortingChanged={setSortOptions}>Origin</SortableColumn></Table.HeaderCell>\n                    <Table.HeaderCell><SortableColumn columnName=\"destination\" sortOptions={sortOptions} onSortingChanged={setSortOptions}>Destination</SortableColumn></Table.HeaderCell>\n                    <Table.HeaderCell><SortableColumn columnName=\"boarding-time\" sortOptions={sortOptions} onSortingChanged={setSortOptions}>Boarding Time</SortableColumn></Table.HeaderCell>\n                    <Table.HeaderCell><SortableColumn columnName=\"departure-time\" sortOptions={sortOptions} onSortingChanged={setSortOptions}>Departure Time</SortableColumn></Table.HeaderCell>\n                    <Table.HeaderCell>Gate</Table.HeaderCell>\n                    <Table.HeaderCell>Seat</Table.HeaderCell>\n                </Table.Row>\n            </Table.Header>\n            <Table.Body>\n                {flights.map(flight => <FlightRow flight={flight} key={flight.segment_id} />)}\n            </Table.Body>\n        </Table>\n    </div>)\n}\n\n/** @param {{flight: import('./flighs.service').Flight}} props*/\nfunction FlightRow({ flight }) {\n    const departureTime = flight?.departure ? moment(getDateFromUnixTime(flight.departure)).format('DD/MM/YYYY HH:mm') : 'N/A'\n    const boardingTime = flight?.detail?.boarding ? moment(getDateFromUnixTime(flight.detail.boarding)).format('DD/MM/YYYY HH:mm') : 'N/A';\n    return (\n        <Table.Row>\n            <Table.Cell>{flight.detail.flight_number}</Table.Cell>\n            <Table.Cell>{flight.origin.value}</Table.Cell>\n            <Table.Cell>{flight.destination.value}</Table.Cell>\n            <Table.Cell data-testid=\"boarding-time\">{boardingTime}</Table.Cell>\n            <Table.Cell data-testid=\"departure-time\">{departureTime}</Table.Cell>\n            <Table.Cell data-testid=\"gate-info\">{flight?.detail?.gate || 'N/A'}</Table.Cell>\n            <Table.Cell data-testid=\"seat-info\">{flight?.detail?.seat || 'N/A'}</Table.Cell>\n        </Table.Row>\n    )\n}\n\nFlightRow.propTypes = {\n    flight: PropTypes.object.isRequired\n}\n\n/**\n * @param {object} props\n * @param {string} props.columnName\n * @param {{columnName: string, direction: string}} [props.sortOptions]\n * @param {object} props.children\n * @param {(sortOptions: {columnName: string, direction:string}) => void} props.onSortingChanged\n */\nfunction SortableColumn({ columnName, sortOptions, children, onSortingChanged }) {    \n    const sortDirection = sortOptions?.columnName === columnName ? sortOptions?.direction : sortDirections.none;\n    function handleSortingChanged() {\n        switch (sortDirection) {\n            case sortDirections.none:\n                onSortingChanged({columnName, direction: sortDirections.descending});\n                break;\n            case sortDirections.descending:\n                onSortingChanged({columnName, direction: sortDirections.ascending});\n                break;\n            case sortDirections.ascending:\n                onSortingChanged({columnName, direction: sortDirections.none});\n                break;\n            default:\n                throw new Error('Invalid sort direction');\n        }\n    }\n\n    return <div className={`sortable ${sortDirection || ''}`} onClick={handleSortingChanged}>\n        {children}\n    </div>\n}\n\nSortableColumn.propTypes = {\n    columnName: PropTypes.string.isRequired,\n    children: PropTypes.node.isRequired,\n    onSortingChanged: PropTypes.func.isRequired\n}\n"]},"metadata":{},"sourceType":"module"}